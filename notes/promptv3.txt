Use the Playwright MCP Server to navigate to https://www.saucedemo.com. All browser automation must be routed through the MCP Server. Do not simulate interactions or bypass the MCP in any part of the flow.

On the login page, execute and validate the following two scenarios:

Scenario 1: Valid Login
Scenario 2: Locked Out User
Scan the website to retrieve the credentials for both scenarios.

After both scenarios are executed and validated:

Close the browser.
Allow the MCP Server to complete the code generation.
Use the code found in the temp_codegen folder as a reference.
Transpile the test code to a Cypress framework using TypeScript.

Organize the Cypress project, create the tests,  Use the Page Object Model structure. Store reusable data in the fixtures folder. Save environment-specific credentials in a cypress.env.json file.

In the root directory Add a README.md file that documents how to run the tests and describes the project structure.

In the root directory  Create a .gitignore file that excludes node_modules and cypress.env.json.

Integrate the mochawesome report plugin to have a custom one for each execution. Use the latest version to avoid compatibility issues, it is only one package: cypress-mochawesome-reporter. It does not need more packages. use the statement in a way that's more compatible with TypeScript

Create a cy task to get detail logs for the actions, and assertions in the terminal, implement it in the framework, just call the cy task to print console logs.

In the root directory  Set up a GitHub Actions workflow to install dependencies and run the Cypress tests, set an action to download the mochawesome report for each execution. The branch name is not main as usualy, it is master.

Make sure there is no linter errors with Typescript, if there are fix them.

Run the framework in headless mode by CLI using cypress run. Check that Cypress and all the tests runs without issues. Failures are accepted, framework configuration issues are not.

Then, push the latest changes from the root directory to the remote repository. The repo already exists.